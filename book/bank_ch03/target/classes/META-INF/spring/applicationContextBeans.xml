<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<bean id="bankDetails" class="kimilm.beans.BankDetails">
		<property name="bankName" value="My Personal Bank" />
		<property name="bankPrimaryBusiness" value="Retail banking" />
		<property name="headOfficeAddress" value="Address of head office" />
		<property name="privateBank" value="Y" />
		<property name="primaryCurrency" value="INR" />
		<property name="dateOfInception" ref="dateType" />
		<property name="branchAddresses" ref="branchAddresses" />
	</bean>

	<util:property-path id="dateType"
		path="dataTypes.dateType" />

	<util:properties id="branchAddresses"
		location="classpath:META-INF/addresses.properties" />

	<bean id="dataTypes" class="kimilm.beans.DataTypesExample">
		<constructor-arg name="byteArrayType"
			value="Getting started with the Spring Framework" />
		<constructor-arg name="charType" value="\u0041" />
		<constructor-arg name="charArray"
			value="Getting started with the Spring Framework" />
		<constructor-arg name="classType"
			value="kimilm.beans.DataTypesExample" />
		<constructor-arg name="currencyType" value="INR" />
		<constructor-arg name="booleanType" ref="booleanTrue" />
		<property name="dateType" value="30-01-2012" />
		<constructor-arg name="longType" value="10" />
		<constructor-arg name="doubleType" value="20" />
		<constructor-arg name="propertiesType"
			ref="propertiesType" />
		<constructor-arg name="anotherPropertiesType"
			ref="anotherPropertiesType" />
		<constructor-arg name="listType" ref="listType" />
		<constructor-arg name="mapType" ref="mapType" />
		<constructor-arg name="setType" ref="setType" />
	</bean>

	<util:constant id="booleanTrue"
		static-field="java.lang.Boolean.TRUE" />
	<util:properties id="propertiesType"
		location="classpath:META-INF/sample1.properties" />
	<util:properties id="anotherPropertiesType"
		location="classpath:META-INF/sample2.properties" />
	<util:list id="listType" list-class="java.util.ArrayList">
		<value>A simple String value in list</value>
		<value>Another simple String value in list</value>
	</util:list>
	<util:map id="mapType" map-class="java.util.TreeMap">
		<entry key="map key 1" value="map key 1â€™s value" />
	</util:map>
	<util:set id="setType" set-class="java.util.HashSet">
		<value>Element 1</value>
		<value>Element 2</value>
	</util:set>

	<bean id="bankStatement" class="kimilm.beans.BankStatement"
		c:transactionDate="30-01-2012" c:amount="1000"
		c:transactionType="Credit" c:referenceNumber="1110202" />

	<bean
		class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="propertyEditorRegistrars">
			<list>
				<bean class="kimilm.beans.MyPropertyRegistrar" />
			</list>
		</property>
	</bean>

	<bean id="myPropertyRegistrar"
		class="kimilm.beans.MyPropertyRegistrar" />


	<bean class="kimilm.beans.CollectionTypesExample">
		<property name="listType">
			<set>
				<value>set element 1</value>
				<value>set element 2</value>
			</set>
		</property>
		<property name="setType">
			<list>
				<value>list element 1</value>
				<value>list element 2</value>
			</list>
		</property>
		<property name="mapType">
			<map>
				<entry>
					<key>
						<value>map key</value>
					</key>
					<value>map value</value>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="myPropertyEditorRegistrar"
		class="kimilm.beans.MyPropertyEditorRegistrar" />
	<bean
		class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="propertyEditorRegistrars">
			<list>
				<ref bean="myPropertyEditorRegistrar" />
			</list>
		</property>
	</bean>

</beans>